<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                         http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                         http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                         http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">

    <context:property-placeholder location="classpath:jdbc.properties" />
    <context:component-scan base-package="com.edu.nju.asi.model"/>
    <context:component-scan base-package="com.edu.nju.asi.dao"/>
    <context:component-scan base-package="com.edu.nju.asi.service"/>

    <!-- task任务扫描注解，用于日常定期更新 -->
    <!--<task:annotation-driven/>-->
    <!--<context:component-scan base-package="task"/>-->

    <!-- 数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <!-- 请求超时时间 -->
        <property name="checkoutTimeout" value="10000"/>
        <!-- 每60秒检查所有连接池中的空闲连接。默认值: 0，不检查 -->
        <property name="idleConnectionTestPeriod" value="1800"/>
        <!-- 连接数据库连接池最大空闲时间 -->
        <property name="maxIdleTime" value="1800"/>
        <!-- 连接池初始化连接数 -->
        <property name="initialPoolSize" value="2"/>
        <property name="minPoolSize" value="10"/>
        <property name="maxPoolSize" value="2000"/>
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 -->
        <property name="acquireIncrement" value="2"/>
        <property name="acquireRetryAttempts" value="10"/>
        <!-- 关闭缓存 -->
        <property name="maxStatements" value="0"/>
        <!-- 请求连接失败后不再重连 -->
        <property name="breakAfterAcquireFailure" value="false"/>
        <!-- 自动超时回收Connection /> -->
        <property name="unreturnedConnectionTimeout" value="25"/>
        <!-- 配置超时自动断开conn /> -->
        <property name="maxIdleTimeExcessConnections" value="20"/>
    </bean>

    <!--配置sessionFactory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.edu.nju.asi.model" /><!-- 实体类的包 -->
        <property name="hibernateProperties">
            <props>
                <!-- 方言：为每一种数据库提供适配器，方便转换 -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL57Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <!-- 会自动创表，但是不会自动创建数据库，所以要先手动创建数据库。 -->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.format_sql">true</prop><!--为了方便调试是否在运行hibernate时在日志中输出sql语句 -->
                <prop key="hibernate.search.default.directory_provider">${hibernate.search.directory_provider}</prop>
                <prop key="hibernate.search.default.indexBase">${hibernate.search.indexBase}</prop>
                <prop key="hibernate.search.analyzer">${hibernate.search.analyzer}</prop>
            </props>
        </property>
    </bean>

    <!-- 定义Hibernate的事务管理器HibernateTransactionManager -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <!-- 依赖注入上面的sessionFactory -->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 用于注入到GeneralDao中 -->
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到 -->
    <bean id="txManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="find*" propagation="REQUIRED"/>
            <tx:method name="get*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="del*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="load*" propagation="REQUIRED"/>
            <tx:method name="fakeDelete*" propagation="REQUIRED"/>
            <tx:method name="*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <aop:config proxy-target-class="true">
        <!--<aop:advisor advice-ref="txAdvice" pointcut="execution(* org.wx.weixcom.edu.nju.asi.dao.dao.*.*(..))"/> -->
        <aop:pointcut expression="execution(* com.edu.nju.asi.dao..*.*(..))" id="pointcut" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
    </aop:config>
</beans>